/* This file was generated by SableCC (http://www.sablecc.org/). */

package compiler.node;

import compiler.analysis.*;

@SuppressWarnings("nls")
public final class AHeader extends PHeader
{
    private TFun _fun_;
    private TId _id_;
    private TLpar _lpar_;
    private PFparDefList _fparDefList_;
    private TRpar _rpar_;
    private TColon _colon_;
    private PRetType _retType_;

    public AHeader()
    {
        // Constructor
    }

    public AHeader(
        @SuppressWarnings("hiding") TFun _fun_,
        @SuppressWarnings("hiding") TId _id_,
        @SuppressWarnings("hiding") TLpar _lpar_,
        @SuppressWarnings("hiding") PFparDefList _fparDefList_,
        @SuppressWarnings("hiding") TRpar _rpar_,
        @SuppressWarnings("hiding") TColon _colon_,
        @SuppressWarnings("hiding") PRetType _retType_)
    {
        // Constructor
        setFun(_fun_);

        setId(_id_);

        setLpar(_lpar_);

        setFparDefList(_fparDefList_);

        setRpar(_rpar_);

        setColon(_colon_);

        setRetType(_retType_);

    }

    @Override
    public Object clone()
    {
        return new AHeader(
            cloneNode(this._fun_),
            cloneNode(this._id_),
            cloneNode(this._lpar_),
            cloneNode(this._fparDefList_),
            cloneNode(this._rpar_),
            cloneNode(this._colon_),
            cloneNode(this._retType_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAHeader(this);
    }

    public TFun getFun()
    {
        return this._fun_;
    }

    public void setFun(TFun node)
    {
        if(this._fun_ != null)
        {
            this._fun_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fun_ = node;
    }

    public TId getId()
    {
        return this._id_;
    }

    public void setId(TId node)
    {
        if(this._id_ != null)
        {
            this._id_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._id_ = node;
    }

    public TLpar getLpar()
    {
        return this._lpar_;
    }

    public void setLpar(TLpar node)
    {
        if(this._lpar_ != null)
        {
            this._lpar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lpar_ = node;
    }

    public PFparDefList getFparDefList()
    {
        return this._fparDefList_;
    }

    public void setFparDefList(PFparDefList node)
    {
        if(this._fparDefList_ != null)
        {
            this._fparDefList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fparDefList_ = node;
    }

    public TRpar getRpar()
    {
        return this._rpar_;
    }

    public void setRpar(TRpar node)
    {
        if(this._rpar_ != null)
        {
            this._rpar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._rpar_ = node;
    }

    public TColon getColon()
    {
        return this._colon_;
    }

    public void setColon(TColon node)
    {
        if(this._colon_ != null)
        {
            this._colon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._colon_ = node;
    }

    public PRetType getRetType()
    {
        return this._retType_;
    }

    public void setRetType(PRetType node)
    {
        if(this._retType_ != null)
        {
            this._retType_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._retType_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._fun_)
            + toString(this._id_)
            + toString(this._lpar_)
            + toString(this._fparDefList_)
            + toString(this._rpar_)
            + toString(this._colon_)
            + toString(this._retType_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._fun_ == child)
        {
            this._fun_ = null;
            return;
        }

        if(this._id_ == child)
        {
            this._id_ = null;
            return;
        }

        if(this._lpar_ == child)
        {
            this._lpar_ = null;
            return;
        }

        if(this._fparDefList_ == child)
        {
            this._fparDefList_ = null;
            return;
        }

        if(this._rpar_ == child)
        {
            this._rpar_ = null;
            return;
        }

        if(this._colon_ == child)
        {
            this._colon_ = null;
            return;
        }

        if(this._retType_ == child)
        {
            this._retType_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._fun_ == oldChild)
        {
            setFun((TFun) newChild);
            return;
        }

        if(this._id_ == oldChild)
        {
            setId((TId) newChild);
            return;
        }

        if(this._lpar_ == oldChild)
        {
            setLpar((TLpar) newChild);
            return;
        }

        if(this._fparDefList_ == oldChild)
        {
            setFparDefList((PFparDefList) newChild);
            return;
        }

        if(this._rpar_ == oldChild)
        {
            setRpar((TRpar) newChild);
            return;
        }

        if(this._colon_ == oldChild)
        {
            setColon((TColon) newChild);
            return;
        }

        if(this._retType_ == oldChild)
        {
            setRetType((PRetType) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
